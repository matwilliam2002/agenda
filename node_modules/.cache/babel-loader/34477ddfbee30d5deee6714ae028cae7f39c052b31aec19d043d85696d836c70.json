{"ast":null,"code":"export default {\n  name: 'TaskItem',\n  props: {\n    task: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    async deleteTask() {\n      try {\n        const response = await fetch(`http://localhost:3000/deletarTarefa`, {\n          method: 'DELETE',\n          body: JSON.stringify({\n            id: this.task.id\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erro ao deletar tarefa: ${response.statusText}`);\n        }\n\n        // Verifica se a resposta é JSON válida\n        const responseData = await response.json().catch(() => null);\n        if (responseData) {\n          this.$emit('task-deleted', this.task.id);\n        } else {\n          console.error('Erro ao deletar tarefa: Resposta não é JSON válida');\n        }\n      } catch (error) {\n        console.error('Erro ao deletar tarefa:', error);\n      }\n    },\n    async checkTask() {\n      try {\n        const response = await fetch(`http://localhost:3000/deletarTarefa`, {\n          method: 'DELETE',\n          body: JSON.stringify({\n            id: this.task.id\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erro ao deletar tarefa: ${response.statusText}`);\n        }\n\n        // Verifica se a resposta é JSON válida\n        const responseData = await response.json().catch(() => null);\n        if (responseData) {\n          this.$emit('task-deleted', this.task.id);\n        } else {\n          console.error('Erro ao deletar tarefa: Resposta não é JSON válida');\n        }\n      } catch (error) {\n        console.error('Erro ao deletar tarefa:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","task","type","Object","required","methods","deleteTask","response","fetch","method","body","JSON","stringify","id","headers","ok","Error","statusText","responseData","json","catch","$emit","console","error","checkTask"],"sources":["src/components/TaskItem.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"task-item\">\r\n      <span class=\"task-marker\" :style=\"{ backgroundColor: task.cor }\"></span>\r\n      <span class=\"task-nome\">{{ task.nome }}</span>\r\n      <div class=\"acoes\">\r\n        <span class=\"material-symbols-rounded icone\" @click=\"checkTask\">check_box</span>\r\n        <span class=\"material-symbols-rounded icone\" @click=\"deleteTask\">delete</span>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"css\">\r\n@import \"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded\";\r\n@import \"../assets/css/TaskItem.css\";\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TaskItem',\r\n  props: {\r\n    task: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    async deleteTask() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/deletarTarefa`, {\r\n          method: 'DELETE',\r\n          body:JSON.stringify({\r\n            id:this.task.id\r\n          }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Erro ao deletar tarefa: ${response.statusText}`);\r\n        }\r\n\r\n        // Verifica se a resposta é JSON válida\r\n        const responseData = await response.json().catch(() => null);\r\n        if (responseData) {\r\n          this.$emit('task-deleted', this.task.id);\r\n        } else {\r\n          console.error('Erro ao deletar tarefa: Resposta não é JSON válida');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao deletar tarefa:', error);\r\n      }\r\n    },\r\n    async checkTask() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/deletarTarefa`, {\r\n          method: 'DELETE',\r\n          body:JSON.stringify({\r\n            id:this.task.id\r\n          }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Erro ao deletar tarefa: ${response.statusText}`);\r\n        }\r\n\r\n        // Verifica se a resposta é JSON válida\r\n        const responseData = await response.json().catch(() => null);\r\n        if (responseData) {\r\n          this.$emit('task-deleted', this.task.id);\r\n        } else {\r\n          console.error('Erro ao deletar tarefa: Resposta não é JSON válida');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao deletar tarefa:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n"],"mappings":"AAkBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YACAC,EAAA,OAAAZ,IAAA,CAAAY;UACA;UACAC,OAAA;YAAA;UAAA;QACA;QAEA,KAAAP,QAAA,CAAAQ,EAAA;UACA,UAAAC,KAAA,4BAAAT,QAAA,CAAAU,UAAA;QACA;;QAEA;QACA,MAAAC,YAAA,SAAAX,QAAA,CAAAY,IAAA,GAAAC,KAAA;QACA,IAAAF,YAAA;UACA,KAAAG,KAAA,sBAAApB,IAAA,CAAAY,EAAA;QACA;UACAS,OAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,4BAAAA,KAAA;MACA;IACA;IACA,MAAAC,UAAA;MACA;QACA,MAAAjB,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YACAC,EAAA,OAAAZ,IAAA,CAAAY;UACA;UACAC,OAAA;YAAA;UAAA;QACA;QAEA,KAAAP,QAAA,CAAAQ,EAAA;UACA,UAAAC,KAAA,4BAAAT,QAAA,CAAAU,UAAA;QACA;;QAEA;QACA,MAAAC,YAAA,SAAAX,QAAA,CAAAY,IAAA,GAAAC,KAAA;QACA,IAAAF,YAAA;UACA,KAAAG,KAAA,sBAAApB,IAAA,CAAAY,EAAA;QACA;UACAS,OAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,4BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}